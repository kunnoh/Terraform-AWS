server {
    listen 80;
    listen [::]:80;

    server_name kun.zapto.org;

    if ($host = kun.zapto.org) {
        return 301 https://$host$request_uri;
    }
}

server {
    listen [::]:443 ssl ipv6only=on http2;
    listen 443 ssl http2;

    server_name kun.zapto.org;

    ssl_certificate /etc/letsencrypt/live/kun.zapto.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kun.zapto.org/privkey.pem;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-bhY783'; style-src 'self' 'nonce-eQs514'; img-src 'self'; font-src 'self'; frame-ancestors 'self';" always;

    # Prevent req processing for large headers
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # Apply rate limiting to all locations
    limit_req zone=one burst=5 nodelay;
    
    # Logging
    access_log /var/log/nginx/kun.zapto.org/access.log main;
    error_log /var/log/nginx/kun.zapto.org/error.log warn;

    # Restrict access to sensitive files
    location ~ /\.(env|htaccess|htpasswd|git|idea|svn|DS_Store|vscode) {
        deny all;
    }

    # Restrict access to .php
    location ~* \.php$ {
        deny all;
    }

    root /var/www/html;
    index index.html;

    location / {
        try_files $uri $uri/ /404.html;
    }
}
